name: Print environment variables

on:
  workflow_dispatch:

jobs:
  debug:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Check file existence
      id: check_files
      uses: andstor/file-existence-action@v2
      with:
        files: "Dockerfile"
        
    - name: Set ENV APP_COLOR
      if: steps.check_files.outputs.files_exists == 'true'
      # Only runs if all of the files exists
      run: echo "$(awk '/APP_COLOR/ {print $2}' Dockerfile)" >> ${GITHUB_ENV}

    - name: Set ENV APP_COLOR if not present at Dockerfile
      if: ${{ env.APP_COLOR == '' }}
      run: echo "APP_COLOR=darkblue" >> ${GITHUB_ENV}

    - name: Set ENV APP_VERSION
      if: steps.check_files.outputs.files_exists == 'true'
      # Only runs if all of the files exists
      run: echo "$(awk '/APP_VERSION/ {print $2}' Dockerfile)" >> ${GITHUB_ENV}

    - name: Set ENV APP_VERSION if not present at Dockerfile
      if: ${{ env.APP_VERSION == '' }}
      run: echo "APP_VERSION=v7" >> ${GITHUB_ENV}


     
    - name: Set varable VERSION
      run: VER=$(cat VERSION); echo "VERSION=$VER" >> ${GITHUB_ENV}

    - name: Set varable VERSION1
      if: ${{ hashFiles('VERSION1') != '' }}
      run: VER=$(cat VERSION1); echo "VERSION1=$VER" >> ${GITHUB_ENV}

    - name: Set varable VERSION1
      if: ${{ hashFiles('VERSION1') == '' }}
      run: echo "VERSION1=1.0.0" >> ${GITHUB_ENV}

    - name: Lowercase the repo name and username
      run: echo "GH_REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}
      
    - name: Print
      run: env | sort

    - name: Print
      run: ls -la /

    - name: Print
      run: ls -la /etc/

    - name: Print
      run: echo ${{ github.event.repository.name }}

    - name: Print
      run: echo ${{ github.repository }}

    - name: Dump context
      uses: crazy-max/ghaction-dump-context@v2

    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJSON(github) }}
      run: echo "$GITHUB_CONTEXT"

    - name: Print github.ref_name
      run: echo ${{ github.ref_name }}

    - name: Print github.event.inputs.version
      run: echo ${{ github.event.inputs.version }}
      
